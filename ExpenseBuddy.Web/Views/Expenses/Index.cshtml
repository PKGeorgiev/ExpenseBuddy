@model PaginatedList<Expense>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<br />
<div class="row">
    <div class="col-md-4">
        <form method="get">
            <div class="form-group">
                <input type="text" asp-action="Index" name="search" value="@ViewData["filter"]" />
                <button type="submit" class="btn btn-default">Search</button> |
                <button type="submit" class="btn btn-default" name="opt" value="clear-filter">Clear</button>
            </div>

        </form>
    </div>
</div>


<table class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ExpenseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Fee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Shop)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Element)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Payers)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpenseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shop)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Element.Name)
                </td>
                <td>
                    @Html.Partial("_ExpensePayersPartial", item.Payers)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-default">Details</a>
                    @if (item.Payers.Any(p => p.Status == PaymentStatus.Payed)) { }
                    else
                    {
                        <span>|</span>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-default">Edit</a>
                    }


                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div>Page @Model.PageIndex of @Model.TotalPages</div><br />

<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Prev
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
